import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.LineIterator;

public class HauntersFactory {
	public static List<Man> haunters(String file) throws IOException {
		Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
		BufferedReader scann = new BufferedReader(new FileReader(file));
		LineIterator scan = FileUtils.lineIterator(new File(file));
		skipComments(scan);

		Map<Integer, Man> men = new LinkedHashMap<Integer, Man>();
		Map<Integer, Woman> women = new LinkedHashMap<Integer, Woman>();
		List<Man> ravers = new LinkedList<Man>();
		loadHumans(scan, men, women, ravers);
		loadDesiredPartners(scan, men, women);
		scan.close();
		ravers.addAll(men.values());
		return ravers;
	}

	private static void loadDesiredPartners(LineIterator scan,
			Map<Integer, Man> men, Map<Integer, Woman> women) throws IOException {
		String line;
		line = scan.nextLine();
		int index = 1;
		Long s = System.currentTimeMillis();
		while (!line.isEmpty()) {
			String[] parts = line.split(":");
			Integer id = Integer.parseInt(parts[0]);
			parts = parts[1].split(" ");
			for (int i = 1; i < parts.length; i++) {
				if (index % 2 == 1) {
					men.get(id).addDesiredPartner(
							women.get(Integer.parseInt(parts[i])));
				} else {
					women.get(id).addDesiredPartner(
							men.get(Integer.parseInt(parts[i])));
				}
			}
			index++;
			line = scan.nextLine();
			if(line == null)
				break;
		}
		System.out.println("Loadtime: " + (System.currentTimeMillis() - s));
	}

	private static void loadHumans(LineIterator scan, Map<Integer, Man> men,
			Map<Integer, Woman> women, List<Man> ravers) throws IOException {
		String line;
		line = scan.nextLine();
		int index = 1;
		while (line != null && !line.isEmpty()) {
			String[] parts = line.split(" ");
			if (index % 2 == 1)
				men.put(Integer.parseInt(parts[0]), new Man(parts[1], ravers));
			else
				women.put(Integer.parseInt(parts[0]), new Woman(parts[1]));

			index++;
			line = scan.nextLine();
		}
	}

	private static String skipComments(LineIterator scan) throws IOException {
		String line = scan.nextLine();
		while (line.charAt(0) == '#') {
			line = scan.nextLine();
		}
		return line;
	}
}
