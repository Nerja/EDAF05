import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;

public class HauntersFactory {
	public static List<Human> haunters(String file) throws IOException {
		Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
		BufferedReader scan = new BufferedReader(new FileReader(file));
		Integer p = Integer.parseInt(skipComments(scan).split("=")[1]);
		List<Human> ravers = new ArrayList<Human>(p/2);
		List<Human> humans = new ArrayList<Human>(p);
		long s = System.currentTimeMillis();
		loadHumans(scan, humans, ravers);
		//System.out.println("Load h time: " + (System.currentTimeMillis() - s));
		loadDesiredPartners(scan, humans);
		scan.close();
		return ravers;
	}

	private static void loadDesiredPartners(BufferedReader scan,
			List<Human> humans)
			throws IOException {
		long time = System.currentTimeMillis();
		String line = scan.readLine();
		while (line != null && !line.isEmpty()) {
			StringTokenizer st = new StringTokenizer(line, ": ");
			//long tip = System.currentTimeMillis();
			Integer myId = Integer.parseInt(st.nextToken());
			while (st.hasMoreTokens()) {
				humans.get(myId - 1).addDesiredPartner(humans.get(Integer.parseInt(st.nextToken()) - 1));
			}
			line = scan.readLine();
			//System.out.println("heave comp " + (System.currentTimeMillis() - tip));
		}
		//System.out.println("Time is: " + (System.currentTimeMillis() - time));
	}

	private static void loadHumans(BufferedReader scan,
			List<Human> humans,
			List<Human> ravers) throws IOException {
		String line;
		line = scan.readLine();
		int index = 1;
		while (line != null && !line.isEmpty()) {
			String[] parts = line.split(" ");
			Human human = new Human(parts[1], ravers);
			humans.add(human);
			if (index % 2 == 1)
				ravers.add(human);

			index++;
			line = scan.readLine();
		}
	}

	private static String skipComments(BufferedReader scan) throws IOException {
		String line = scan.readLine();
		while (line.charAt(0) == '#') {
			line = scan.readLine();
		}
		return line;
	}
}